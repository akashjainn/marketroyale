// Prisma schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String         @id @default(cuid())
  handle     String         @unique
  email      String         @unique
  createdAt  DateTime       @default(now())
  entries    ContestEntry[]
  contests   Contest[]      @relation("CreatedContests")
}

model Contest {
  id           String          @id @default(cuid())
  name         String
  status       ContestStatus   @default(DRAFT)
  startAt      DateTime
  endAt        DateTime
  scoringRule  String          @default("PCT_RETURN")
  createdById  String
  createdBy    User            @relation("CreatedContests", fields: [createdById], references: [id])
  entries      ContestEntry[]
  leaderboard  Leaderboard[]
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
}

model ContestEntry {
  id         String      @id @default(cuid())
  contestId  String
  userId     String
  createdAt  DateTime    @default(now())
  finalScore Float?      @default(0)
  picks      EntryPick[]
  contest    Contest     @relation(fields: [contestId], references: [id])
  user       User        @relation(fields: [userId], references: [id])
  @@unique([contestId, userId])
}

model EntryPick {
  id         String   @id @default(cuid())
  entryId    String
  ticker     String
  weight     Float
  lockPrice  Float?
  closePrice Float?
  entry      ContestEntry @relation(fields: [entryId], references: [id])
  @@index([ticker])
}

model PriceBar {
  id     String   @id @default(cuid())
  ticker String
  t      DateTime
  o      Float
  h      Float
  l      Float
  c      Float
  v      Float
  @@index([ticker, t])
}

model Leaderboard {
  id         String   @id @default(cuid())
  contestId  String
  snapshotAt DateTime @default(now())
  ranks      Json
  contest    Contest  @relation(fields: [contestId], references: [id])
  @@index([contestId, snapshotAt])
}

enum ContestStatus {
  DRAFT
  OPEN
  LOCKED
  SETTLED
}
